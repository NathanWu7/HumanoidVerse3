# """
#   Generated by Eclipse Cyclone DDS idlc Python Backend
#   Cyclone DDS IDL version: v0.11.0
#   Module: unitree_hg.msg.dds_
#   IDL file: MotorState_.idl

# """

# from enum import auto
# from typing import TYPE_CHECKING, Optional
# from dataclasses import dataclass

# import cyclonedds.idl as idl
# import cyclonedds.idl.annotations as annotate
# import cyclonedds.idl.types as types

# # root module import for resolving types


# @dataclass
# @annotate.final
# @annotate.autoid("sequential")
# class MotorState(idl.IdlStruct, typename="unitree_hg.msg.dds_.MotorState_"):
#     mode: types.uint8
#     q: types.float32
#     dq: types.float32
#     ddq: types.float32
#     tau_est: types.float32
#     temperature: types.array[types.int16, 2]
#     vol: types.float32
#     sensor: types.array[types.uint32, 2]
#     motorstate: types.uint32
#     reserve: types.array[types.uint32, 4]

# @dataclass
# @annotate.final
# @annotate.autoid("sequential")
# class LowState(idl.IdlStruct, typename="unitree_hg.msg.dds_.LowState_"):
#     version: types.array[types.uint32, 2]
#     mode_pr: types.uint8
#     mode_machine: types.uint8
#     tick: types.uint32
#     imu_state: 'unitree_sdk2py.idl.unitree_hg.msg.dds_.IMUState_'
#     motor_state: types.array['unitree_sdk2py.idl.unitree_hg.msg.dds_.MotorState_', 35]
#     wireless_remote: types.array[types.uint8, 40]
#     reserve: types.array[types.uint32, 4]
#     crc: types.uint32